{"version":3,"sources":["../../../src/model/booking/booking.requests.js"],"names":["Schema","mongoose","BookingSchema","clientID","type","String","required","clientName","selectedCleaners","Array","selectedCleanerIDs","postcode","extraTasks","dateFirstClean","Date","priority","clientPhone","Number","clientEmail","address","city","accessType","status","Boolean","default","RequestSchema","set","Booking","module","exports","model"],"mappings":";;AAAA;;;;;;AAEA,IAAMA,SAASC,mBAASD,MAAxB;;AAEA,IAAME,gBAAgBF,OAAO;AACzBG,cAAS;AACLC,cAAMC,MADD;AAELC,kBAAU;AAFL,KADgB;AAKzBC,gBAAW;AACPH,cAAMC,MADC;AAEPC,kBAAU;AAFH,KALc;AASzBE,sBAAiB;AACbJ,cAAMK,KADO;AAEbH,kBAAU;AAFG,KATQ;AAazBI,wBAAmB;AACfN,cAAMK,KADS;AAEfH,kBAAU;AAFK,KAbM;AAiBzBK,cAAS;AACLP,cAAMC,MADD;AAELC,kBAAU;AAFL,KAjBgB;AAqBzBM,gBAAW;AACPR,cAAMK,KADC;AAEPH,kBAAU;AAFH,KArBc;AAyBzBO,oBAAe;AACXT,cAAMU,IADK;AAEXR,kBAAU;AAFC,KAzBU;AA6BzBS,cAAS;AACLX,cAAMC;AADD,KA7BgB;AAgCzBW,iBAAY;AACRZ,cAAMa,MADE;AAERX,kBAAU;AAFF,KAhCa;AAoCzBY,iBAAY;AACRd,cAAMC,MADE;AAERC,kBAAU;AAFF,KApCa;AAwCzBa,aAAQ;AACJf,cAAMC,MADF;AAEJC,kBAAU;AAFN,KAxCiB;AA4CzBc,UAAK;AACDhB,cAAMC,MADL;AAEDC,kBAAU;AAFT,KA5CoB;AAgDzBe,gBAAW;AACPjB,cAAMC,MADC;AAEPC,kBAAU;AAFH,KAhDc;AAoDzBgB,YAAO;AACHlB,cAAMmB,OADH;AAEHC,iBAAS,KAFN;AAGHlB,kBAAU;AAHP;AApDkB,CAAP,CAAtB;;AA2DAmB,cAAcC,GAAd,CAAkB,YAAlB,EAAgC,IAAhC;AACA,IAAIC,UAAUC,OAAOC,OAAP,GAAiB5B,mBAAS6B,KAAT,CAAe,SAAf,EAA0B5B,aAA1B,CAA/B","file":"booking.requests.js","sourcesContent":["import mongoose from 'mongoose';\n\nconst Schema = mongoose.Schema;\n\nconst BookingSchema = Schema({\n    clientID:{\n        type: String,\n        required: true\n    },\n    clientName:{\n        type: String,\n        required: true\n    },\n    selectedCleaners:{\n        type: Array,\n        required: true\n    },\n    selectedCleanerIDs:{\n        type: Array,\n        required: true\n    },\n    postcode:{\n        type: String,\n        required: true\n    },\n    extraTasks:{\n        type: Array,\n        required: true\n    },\n    dateFirstClean:{\n        type: Date,\n        required: true\n    },\n    priority:{\n        type: String\n    },\n    clientPhone:{\n        type: Number,\n        required: true\n    },\n    clientEmail:{\n        type: String,\n        required: true\n    },\n    address:{\n        type: String,\n        required: true\n    },\n    city:{\n        type: String,\n        required: true\n    },\n    accessType:{\n        type: String,\n        required: true\n    },\n    status:{\n        type: Boolean,\n        default: false,\n        required: true\n    }\n});\n\nRequestSchema.set('timestamps', true);\nlet Booking = module.exports = mongoose.model('Booking', BookingSchema);"]}