{"version":3,"sources":["../src/index.js"],"names":["app","server","http","createServer","use","bodyParser","json","limit","config","bodyLimit","urlencoded","extended","express","static","path","join","__dirname","errorFormatter","param","msg","value","namespace","split","root","shift","formParam","length","routes","listen","port","console","log","address"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAGA;;;;AACA;;;;;;AAFA;AAIA,IAAIA,MAAM,wBAAV;AACAA,IAAIC,MAAJ,GAAaC,eAAKC,YAAL,CAAkBH,GAAlB,CAAb;;AAEA;AACA;AACAA,IAAII,GAAJ,CAAQC,qBAAWC,IAAX,CAAgB;AACtBC,SAAOC,iBAAOC;AADQ,CAAhB,CAAR;AAGAT,IAAII,GAAJ,CAAQC,qBAAWK,UAAX,CAAsB,EAACC,UAAU,KAAX,EAAtB,CAAR;;AAEA;AACAX,IAAII,GAAJ,CAAQQ,kBAAQC,MAAR,CAAeC,eAAKC,IAAL,CAAUC,SAAV,EAAqB,QAArB,CAAf,CAAR;;AAEA;AACAhB,IAAII,GAAJ,CAAQ,sBAAO,KAAP,CAAR;;AAEA;AACAJ,IAAII,GAAJ,CAAQ,gCAAiB;AACvBa,kBAAgB,wBAACC,KAAD,EAAQC,GAAR,EAAaC,KAAb,EAAsB;AACpC,QAAIC,YAAYH,MAAMI,KAAN,CAAY,GAAZ,CAAhB;AAAA,QACEC,OAAQF,UAAUG,KAAV,EADV;AAAA,QAEEC,YAAYF,IAFd;;AAIA,WAAMF,UAAUK,MAAhB,EAAwB;AACtBD,mBAAa,MAAMJ,UAAUG,KAAV,EAAN,GAA0B,GAAvC;AACD;AACD,WAAO;AACLN,aAAOO,SADF;AAELN,WAAKA,GAFA;AAGLC,aAAOA;AAHF,KAAP;AAKD;AAdsB,CAAjB,CAAR;;AAiBA;AACApB,IAAII,GAAJ,CAAQ,SAAR,EAAmBuB,gBAAnB;;AAEA3B,IAAIC,MAAJ,CAAW2B,MAAX,CAAkBpB,iBAAOqB,IAAzB;AACAC,QAAQC,GAAR,sBAA+B/B,IAAIC,MAAJ,CAAW+B,OAAX,GAAqBH,IAApD;;kBAEe7B,G","file":"index.js","sourcesContent":["import http from 'http';\nimport express from 'express';\nimport bodyParser from 'body-parser';\nimport mongoose from 'mongoose';\nimport logger from 'morgan';\nimport path from 'path';\nimport expressValidator from 'express-validator';\n\n// importing the config and routes folders\nimport config from './config';\nimport routes from './routes';\n\nlet app = express();\napp.server = http.createServer(app);\n\n// middleware\n// parse application/json\napp.use(bodyParser.json({\n  limit: config.bodyLimit\n}));\napp.use(bodyParser.urlencoded({extended: false}));\n\n// setting public folder\napp.use(express.static(path.join(__dirname, 'public')));\n\n// morgan logger\napp.use(logger('dev'));\n\n// Express Validator Middleware\napp.use(expressValidator({\n  errorFormatter: (param, msg, value) =>{\n    var namespace = param.split('-')\n    , root  = namespace.shift()\n    , formParam = root;\n\n    while(namespace.length) {\n      formParam += '[' + namespace.shift() + ']';\n    }\n    return {\n      param: formParam,\n      msg: msg,\n      value: value\n    };\n  }\n}));\n\n// routes for API version 1\napp.use('/api/v1', routes);\n\napp.server.listen(config.port);\nconsole.log(`started on port:${app.server.address().port}`);\n\nexport default app;\n"]}